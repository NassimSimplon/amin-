{"ast":null,"code":"import { fetchLogin } from \"../helpers/axios\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const login = user => async dispatch => {\n  try {\n    const res = await fetchLogin(user).then(res => {});\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n\n    console.log(\"payload\");\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/nassim/Desktop/test-auth/client/src/actions/authactions.js"],"names":["fetchLogin","LOGIN_REQUEST","login","user","dispatch","res","then","status","token","data","localStorage","setItem","type","payload","error","console","log"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,MAAMC,KAAK,GAAGC,IAAD,IAAS,MAAOC,QAAP,IAAmB;AAE5C,MAAG;AAGC,UAAMC,GAAG,GAAG,MAAML,UAAU,CAACG,IAAD,CAAV,CAAiBG,IAAjB,CAAsBD,GAAG,IAAE,CAAE,CAA7B,CAAlB;;AACA,QAAIA,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAuB;AACnB,YAAM;AAACC,QAAAA,KAAD;AAAOL,QAAAA;AAAP,UAAeE,GAAG,CAACI,IAAzB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,KAA7B;AACAJ,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,OAAO,EAAC;AACJL,UAAAA,KADI;AACEL,UAAAA;AADF;AAFH,OAAD,CAAR;AAOF,KAVF,MAUM;AACF,UAAGE,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,QAAAA,QAAQ,CAAC;AACLQ,UAAAA,IAAI,EAAC,cADA;AAELC,UAAAA,OAAO,EAAC;AAACC,YAAAA,KAAK,EAACT,GAAG,CAACI,IAAJ,CAASK;AAAhB;AAFH,SAAD,CAAR;AAIH;AAEJ;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAzBD,CA0BA,OAAOF,KAAP,EAAc;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACb,CA/BM","sourcesContent":["import {fetchLogin} from \"../helpers/axios\"\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\n \n\nexport const login =(user)=> async (dispatch) =>{\n    \n    try{\n        \n       \n        const res = await fetchLogin(user).then(res=>{})\n        if (res.status === 200){\n            const {token,user} = res.data\n            localStorage.setItem('token',token)\n            dispatch({\n                type:'LOGIN_SUCCESS',\n                payload:{\n                    token,user\n                }\n               \n            })\n         }else{\n            if(res.status === 400){\n                dispatch({\n                    type:\"LOGIN_FAILED\",\n                    payload:{error:res.data.error}\n                })\n            }\n\n        }\n      \n        console.log(\"payload\")\n    }\n    catch (error) {\n              console.log(error);\n             }\n}\n"]},"metadata":{},"sourceType":"module"}