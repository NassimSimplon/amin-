{"ast":null,"code":"import { fetchLogin } from \"../helpers/axios\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const login = user => async dispatch => {\n  try {\n    fetchLogin(user).then(res => {\n      if (res.status === 200) {\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem('token', token);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        if (res.status === 400) {\n          dispatch({\n            type: \"LOGIN_FAILED\",\n            payload: {\n              error: res.data.error\n            }\n          });\n        }\n      }\n\n      console.log(\"payload\");\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/nassim/Desktop/test-auth/client/src/actions/authactions.js"],"names":["fetchLogin","LOGIN_REQUEST","login","user","dispatch","then","res","status","token","data","localStorage","setItem","type","payload","error","console","log"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,MAAMC,KAAK,GAAGC,IAAD,IAAS,MAAMC,QAAN,IAAkB;AAE3C,MAAG;AAGCJ,IAAAA,UAAU,CAACG,IAAD,CAAV,CAAiBE,IAAjB,CAAuBC,GAAD,IAAO;AACzB,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnB,cAAM;AAACC,UAAAA,KAAD;AAAOL,UAAAA;AAAP,YAAeG,GAAG,CAACG,IAAzB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,KAA7B;AACAJ,QAAAA,QAAQ,CAAC;AACLQ,UAAAA,IAAI,EAAC,eADA;AAELC,UAAAA,OAAO,EAAC;AACJL,YAAAA,KADI;AACEL,YAAAA;AADF;AAFH,SAAD,CAAR;AAOF,OAVF,MAUM;AACF,YAAGG,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,UAAAA,QAAQ,CAAC;AACLQ,YAAAA,IAAI,EAAC,cADA;AAELC,YAAAA,OAAO,EAAC;AAACC,cAAAA,KAAK,EAACR,GAAG,CAACG,IAAJ,CAASK;AAAhB;AAFH,WAAD,CAAR;AAIH;AAEJ;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAtBD;AAwBH,GA3BD,CA4BA,OAAOF,KAAP,EAAc;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACb,CAjCM","sourcesContent":["import {fetchLogin} from \"../helpers/axios\"\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\n \n\nexport const login =(user)=> async(dispatch) =>{\n    \n    try{\n        \n       \n        fetchLogin(user).then((res)=>{\n            if (res.status === 200){\n                const {token,user} = res.data\n                localStorage.setItem('token',token)\n                dispatch({\n                    type:'LOGIN_SUCCESS',\n                    payload:{\n                        token,user\n                    }\n                   \n                })\n             }else{\n                if(res.status === 400){\n                    dispatch({\n                        type:\"LOGIN_FAILED\",\n                        payload:{error:res.data.error}\n                    })\n                }\n    \n            }\n          \n            console.log(\"payload\")\n        })\n       \n    }\n    catch (error) {\n              console.log(error);\n             }\n}\n"]},"metadata":{},"sourceType":"module"}