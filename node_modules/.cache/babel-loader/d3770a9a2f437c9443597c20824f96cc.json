{"ast":null,"code":"import { fetchLogin } from \"../helpers/axios\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const login = (email, passord) => {\n  return dispatch => {\n    fetchLogin().then(user => dispatch({\n      type: LOGIN_REQUEST,\n      payload: { ...user\n      }\n    })).catch(err => dispatch({\n      type: \"GET_PLATS_FAILED\",\n      payload: err\n    }));\n  };\n};\nexport const addPlat = (platName, platImage, description, prix) => async dispatch => {\n  try {\n    const res = await fetchAddPlat(platName, platImage, description, prix);\n    dispatch({\n      type: \"ADD_PLATS_SUCCED\",\n      payload: res.data\n    });\n    console.log(\"payload\");\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/nassim/Desktop/test-auth/client/src/actions/authactions.js"],"names":["fetchLogin","LOGIN_REQUEST","login","email","passord","dispatch","then","user","type","payload","catch","err","addPlat","platName","platImage","description","prix","res","fetchAddPlat","data","console","log","error"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAOC,KAAK,GAAG,CAACC,KAAD,EAAOC,OAAP,KAAiB;AACnC,SAAOC,QAAQ,IAAI;AACfL,IAAAA,UAAU,GACTM,IADD,CACOC,IAAI,IAAGF,QAAQ,CAClB;AAACG,MAAAA,IAAI,EAAEP,aAAP;AAAqBQ,MAAAA,OAAO,EAAE,EAC1B,GAAGF;AADuB;AAA9B,KADkB,CADtB,EAOCG,KAPD,CAOOC,GAAG,IAAEN,QAAQ,CAAE;AAClBG,MAAAA,IAAI,EAAE,kBADY;AAElBC,MAAAA,OAAO,EAAEE;AAFS,KAAF,CAPpB;AAWH,GAZD;AAcH,CAfM;AAiBP,OAAO,MAAMC,OAAO,GAAC,CAACC,QAAD,EAAUC,SAAV,EAAoBC,WAApB,EAAgCC,IAAhC,KAAwC,MAAOX,QAAP,IAAmB;AAC5E,MAAG;AACC,UAAMY,GAAG,GAAC,MAAMC,YAAY,CAAEL,QAAF,EAAWC,SAAX,EAAqBC,WAArB,EAAiCC,IAAjC,CAA5B;AACAX,IAAAA,QAAQ,CAAE;AACNG,MAAAA,IAAI,EAAC,kBADC;AAENC,MAAAA,OAAO,EAACQ,GAAG,CAACE;AAFN,KAAF,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAPD,CAQA,OAAOC,KAAP,EAAc;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACb,CAZM","sourcesContent":["import {fetchLogin} from \"../helpers/axios\"\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const  login = (email,passord)=>{\n    return dispatch => {\n        fetchLogin()\n        .then (user =>dispatch (\n            {type: LOGIN_REQUEST,payload: {\n                ...user\n            }}) \n        )\n\n        .catch(err=>dispatch( {\n            type: \"GET_PLATS_FAILED\",\n            payload: err\n          }))\n    }\n\n}\n\nexport const addPlat=(platName,platImage,description,prix)=> async (dispatch) =>{\n    try{\n        const res=await fetchAddPlat (platName,platImage,description,prix);\n        dispatch ({\n            type:\"ADD_PLATS_SUCCED\",\n            payload:res.data\n        })\n        console.log(\"payload\")\n    }\n    catch (error) {\n              console.log(error);\n             }\n}\n"]},"metadata":{},"sourceType":"module"}