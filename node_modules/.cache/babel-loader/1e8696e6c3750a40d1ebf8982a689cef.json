{"ast":null,"code":"import { fetchLogin } from \"../helpers/axios\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const login = user => async dispatch => {\n  try {\n    const res = await fetchLogin(user);\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      console.log(token);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n\n    console.log(\"payload\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: 'LOGIN_FAILED',\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async;\n};","map":{"version":3,"sources":["/home/nassim/Desktop/test-auth/client/src/actions/authactions.js"],"names":["fetchLogin","LOGIN_REQUEST","login","user","dispatch","res","status","token","data","console","log","localStorage","setItem","JSON","stringify","type","payload","error","isUserLoggedIn","getItem","parse","signout","async"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,MAAMC,KAAK,GAAGC,IAAD,IAAS,MAAMC,QAAN,IAAkB;AAE3C,MAAG;AAGF,UAAMC,GAAG,GAAI,MAAML,UAAU,CAACG,IAAD,CAA7B;;AACO,QAAIE,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AAEnB,YAAM;AAACC,QAAAA,KAAD;AAAOJ,QAAAA;AAAP,UAAeE,GAAG,CAACG,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,KAA7B;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAA5B;AACAC,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,OAAO,EAAC;AACJT,UAAAA,KADI;AACEJ,UAAAA;AADF;AAFH,OAAD,CAAR;AAOF,KAbF,MAaM;AACF,UAAGE,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClBF,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAC,cADA;AAELC,UAAAA,OAAO,EAAC;AAACC,YAAAA,KAAK,EAACZ,GAAG,CAACG,IAAJ,CAASS;AAAhB;AAFH,SAAD,CAAR;AAIH;AAEJ;;AAEDR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAGP,GA9BD,CA+BA,OAAOO,KAAP,EAAc;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA;AACb,CApCM;AAsCP,OAAO,MAAMC,cAAc,GAAG,MAAK;AAC/B,SAAO,MAAMd,QAAN,IAAiB;AACpB,UAAMG,KAAK,GAAGI,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGZ,KAAH,EAAS;AACL,YAAMJ,IAAI,GAAGU,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAf,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,OAAO,EAAC;AACJT,UAAAA,KADI;AACEJ,UAAAA;AADF;AAFH,OAAD,CAAR;AAMH,KARD,MAQK;AACDC,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAC,cAAN;AACLC,QAAAA,OAAO,EAAC;AAEJC,UAAAA,KAAK,EAAC;AAFF;AADH,OAAD,CAAR;AAMH;AACJ,GAlBD;AAoBH,CArBM;AAuBP,OAAO,MAAMI,OAAO,GAAG,MAAK;AACxB,SAAOC,KAAP;AACH,CAFM","sourcesContent":["import {fetchLogin} from \"../helpers/axios\"\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\n \n\nexport const login =(user)=> async(dispatch) =>{\n    \n    try{\n        \n       \n     const res =  await fetchLogin(user)\n            if (res.status === 200){\n              \n                const {token,user} = res.data\n                console.log(token)\n                localStorage.setItem('token',token)\n                localStorage.setItem('user',JSON.stringify(user))\n                dispatch({\n                    type:'LOGIN_SUCCESS',\n                    payload:{\n                        token,user\n                    }\n                   \n                })\n             }else{\n                if(res.status === 400){\n                    dispatch({\n                        type:\"LOGIN_FAILED\",\n                        payload:{error:res.data.error}\n                    })\n                }\n    \n            }\n          \n            console.log(\"payload\")\n       \n       \n    }\n    catch (error) {\n              console.log(error);\n             }\n}\n\nexport const isUserLoggedIn = () =>{\n    return async dispatch =>{\n        const token = localStorage.getItem('token')\n        if(token){\n            const user = JSON.parse(localStorage.getItem('user'))\n            dispatch({\n                type:'LOGIN_SUCCESS',\n                payload:{\n                    token,user\n                }\n            })\n        }else{\n            dispatch({type:'LOGIN_FAILED',\n                payload:{\n                    \n                    error:'Failed to login'\n                }\n            })\n        }\n    }\n\n}\n\nexport const signout = () =>{\n    return async \n}\n\n\n"]},"metadata":{},"sourceType":"module"}