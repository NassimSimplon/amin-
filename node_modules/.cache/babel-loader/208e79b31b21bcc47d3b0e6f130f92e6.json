{"ast":null,"code":"import { fetchLogin } from \"../helpers/axios\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const login = user => async dispatch => {\n  try {\n    const res = await fetchLogin({ ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n\n    console.log(\"payload\");\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/nassim/Desktop/test-auth/client/src/actions/authactions.js"],"names":["fetchLogin","LOGIN_REQUEST","login","user","dispatch","res","status","token","localStorage","setItem","type","payload","error","data","console","log"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,MAAMC,KAAK,GAAGC,IAAD,IAAS,MAAOC,QAAP,IAAmB;AAE5C,MAAG;AAGC,UAAMC,GAAG,GAAE,MAAML,UAAU,CAAE,EAAC,GAAGG;AAAJ,KAAF,CAA3B;;AACA,QAAIE,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnB,YAAM;AAACC,QAAAA,KAAD;AAAOJ,QAAAA;AAAP,UAAeE,GAAG,CACxBG,YADqB,CACRC,OADQ,CACA,OADA,EACQF,KADR,CAArB;AAEAH,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,OAAO,EAAC;AACJJ,UAAAA,KADI;AACEJ,UAAAA;AADF;AAFH,OAAD,CAAR;AAOF,KAVF,MAUM;AACF,UAAGE,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClBF,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAC,cADA;AAELC,UAAAA,OAAO,EAAC;AAACC,YAAAA,KAAK,EAACP,GAAG,CAACQ,IAAJ,CAASD;AAAhB;AAFH,SAAD,CAAR;AAIH;AAEJ;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAzBD,CA0BA,OAAOH,KAAP,EAAc;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACb,CA/BM","sourcesContent":["import {fetchLogin} from \"../helpers/axios\"\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\n \n\nexport const login =(user)=> async (dispatch) =>{\n    \n    try{\n        \n       \n        const res =await fetchLogin ({...user});\n        if (res.status === 200){\n            const {token,user} = res.\n            localStorage.setItem('token',token)\n            dispatch({\n                type:'LOGIN_SUCCESS',\n                payload:{\n                    token,user\n                }\n               \n            })\n         }else{\n            if(res.status === 400){\n                dispatch({\n                    type:\"LOGIN_FAILED\",\n                    payload:{error:res.data.error}\n                })\n            }\n\n        }\n      \n        console.log(\"payload\")\n    }\n    catch (error) {\n              console.log(error);\n             }\n}\n"]},"metadata":{},"sourceType":"module"}